# -*- coding: utf-8 -*-
"""Pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l_VoT1o_ajr2tvbM9_-XTquJ0t0WNnT4

#pandas
"""

#impporting pandas library
import pandas as pd

"""#Creating Pandas dataframe"""

from sklearn.datasets import fetch_california_housing

california_housing = fetch_california_housing()
print(california_housing)

# pandas dataframe
boston_df = pd.DataFrame(california_housing.data,columns = california_housing.feature_names)

print(boston_df)

boston_df.head(5)

boston_df.shape

"""#Importing the data from a CSV file to a pandas DataFrame"""

#csv file to pandas dataframe
diabetes_df = pd.read_csv("/content/diabetes.csv")

print(diabetes_df)

diabetes_df.head()

#loading the data  from a excel file to pandas DataFrame
report_df = pd.read_excel("/content/FOOD DONATION REPORT.xlsx")

report_df.head()

report_df.shape

"""#Exporting a DataFrame to a csv"""

boston_df.to_csv('boston.csv') #exporting into csv

boston_df.to_excel('boston.xlsx') #exporting into excel

# creating a DataFrame with ranndom values
import numpy as np

random_df = pd.DataFrame(np.random.randint(2,30,(2,3)))

random_df

random_df.head()

random_df.shape

"""#Inspecting a DataFrame"""

#finding the number of rows and columns
boston_df.size #no of elements

boston_df.shape

boston_df.head(7)#for 7 top colums , by default tjhe head wwil be 5

boston_df.tail()

# informations about the dataframe
boston_df.info()

boston_df.describe() #gives the mean median etc

boston_df.isnull().sum() #it gives the number of null values in every column

diabetes_df.head()

# counting the values based on the labels
diabetes_df.value_counts('Outcome')

# group the values based on the mean

diabetes_df.groupby('Outcome').mean()

"""#Statistical measures of a DataFrame"""

#count the nummber of values inn each column
boston_df.count()

boston_df.mean()

boston_df.median()

boston_df.std()

boston_df.min()

boston_df.max()

diabetes_df.describe()

"""#Manipulating a DataFrame"""

# adding a column to a dataframe
boston_df['Price'] = california_housing.target

boston_df.head()

#removing a particular row
boston_df.drop(index=1,axis=0)

boston_df.head()

#drop a column
boston_df.drop(columns='HouseAge',axis=1)

# locating a row using the index value
boston_df.iloc[2]

#locating a particular column
boston_df.iloc[:,0] #first column

"""#Correlation
1. +ve Correlation
2. -ve Correlation
"""

boston_df.corr()

#from the above output we can come to the conclusion that MedInce is negatively correlated to HouseAge and positively correelated with AveRooms.

#this is about the correlation

